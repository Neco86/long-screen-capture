var R=(e,d,s)=>new Promise((r,i)=>{var o=n=>{try{l(s.next(n))}catch(v){i(v)}},a=n=>{try{l(s.throw(n))}catch(v){i(v)}},l=n=>n.done?r(n.value):Promise.resolve(n.value).then(o,a);l((s=s.apply(e,d)).next())});importScripts("./opencv.js");const loadOpencvPromise=new Promise(e=>{cv.onRuntimeInitialized=e});function HTMLImageElement(){}function HTMLCanvasElement(e){this.width=e.width,this.height=e.height,this.data=e,this.getContext=()=>({getImageData:()=>this.data})}const findCounters=e=>{if(e.counters)return e.counters;cv.cvtColor(e,e,cv.COLOR_RGBA2GRAY,0),cv.Sobel(e,e,cv.CV_8U,1,0,3),cv.threshold(e,e,0,255,cv.THRESH_OTSU+cv.THRESH_BINARY);const d=cv.getStructuringElement(cv.MORPH_RECT,new cv.Size(5,5)),s=cv.getStructuringElement(cv.MORPH_RECT,new cv.Size(10,10));cv.dilate(e,e,s),cv.erode(e,e,d),cv.Canny(e,e,10,10);const r=new cv.MatVector,i=new cv.Mat;cv.findContours(e,r,i,cv.RETR_CCOMP,cv.CHAIN_APPROX_SIMPLE);const o=[];for(let a=0;a<r.size();++a){const l=cv.minAreaRect(r.get(a));o.push(l)}return r.delete(),i.delete(),e.counters=o,e.counters},getOffsetInfo=(e,d)=>{const s=findCounters(e),r=findCounters(d),i=t=>`${t.center.x}_${t.size.width}_${t.size.height}_${t.angle}`,o={};let a=0,l=0;const n=s.filter(t=>{const u=(c,y)=>Math.abs(c.center.y-y.center.y),f=r.filter(c=>i(t)===i(c)).sort((c,y)=>u(c,t)-u(y,t));if(f.length){t.match=f[0];const c=f[0].center.y-t.center.y;return t.distance=c,c&&(o[c]?o[c]+=1:o[c]=1,o[c]>a&&(a=o[c],l=c)),!0}return!1});if(n.filter(t=>!t.distance).length>n.length*.9)return{y1:0,y2:0,counters1:s,counters2:r};const h=n.filter(t=>t.distance===l).sort((t,u)=>t.center.y-u.center.y);return h.length&&h.length>.1*n.length?{y1:h[0].center.y,y2:h[0].match.center.y,counters1:s,counters2:r}:{y1:0,y2:0,counters1:s,counters2:r}};self.addEventListener("message",function(e){return R(this,null,function*(){if(e.data&&e.data.method==="getOffsetInfo"){yield loadOpencvPromise;const{data1:d,data2:s,counters1:r,counters2:i}=e.data.args,o=new HTMLCanvasElement(d),a=cv.imread(o);a.counters=r;const l=new HTMLCanvasElement(s),n=cv.imread(l);n.counters=i;const v=getOffsetInfo(a,n);a.delete(),n.delete(),self.postMessage(v)}})},!1);
